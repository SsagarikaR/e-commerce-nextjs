version: '3.8'

services:
  app:
    container_name: e-commerce
    build:
      context: ./
      dockerfile: Dockerfile
      target: ${NODE_ENV:-development}
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - IS_DOCKER=true 
      - DATABASE_URL=mysql://sagarika:Sagarika%40%71@mysql-db:3307/eCommerce
      - DBUSER=sagarika
      - PASSWORD=Sagarika%40%71
      - DBNAME=eCommerce
      - DB_PORT=3306
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      mysql-db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - my_network

  mysql-db:
    image: mysql:8.0
    container_name: mysql-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: Sagarika%40%71
      MYSQL_DATABASE: eCommerce
      MYSQL_USER: sagarika
      MYSQL_PASSWORD: Sagarika%40%71
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "sagarika", "-pSagarika%40%71"]
      interval: 10s
      timeout: 10s
      retries: 10
    networks:
      - my_network

volumes:
  mysql-data:

networks:
  my_network:
    driver: bridge
